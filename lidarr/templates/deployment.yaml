apiVersion: apps/v1
kind: Deployment
metadata:
  name: lidarr
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: lidarr
  template:
    metadata:
      labels:
        app.kubernetes.io/name: lidarr
    spec:
      nodeSelector:
        kubernetes.io/hostname: node1
      securityContext:
        fsGroup: 100
      containers:
        - name: lidarr
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PUID
              value: "{{ .Values.env.PUID }}"
            - name: PGID
              value: "{{ .Values.env.PGID }}"
            - name: TZ
              value: "{{ .Values.env.TZ }}"
          ports:
            - containerPort: 8686
          volumeMounts:
            - name: config
              mountPath: /config
            - name: downloads
              mountPath: /downloads
            - name: music
              mountPath: /music
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: lidarr-config
        - name: downloads
          hostPath:
            path: /mnt/Father/downloads/lidarr
        - name: music
          hostPath:
            path: /mnt/Father/music
